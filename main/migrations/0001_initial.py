# Generated by Django 3.2.9 on 2021-11-04 17:14

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('isbn', models.CharField(max_length=13, primary_key=True, serialize=False)),
                ('book_name', models.CharField(max_length=255)),
                ('buy_price', models.FloatField()),
                ('rent_price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='HardCopy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isbn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.book', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('warehouse_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='TransactionInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bookstore_account', models.IntegerField()),
                ('total_price', models.FloatField(default=0)),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.customer')),
            ],
        ),
        migrations.CreateModel(
            name='TransactionDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.CharField(max_length=4)),
                ('price', models.FloatField()),
                ('trans_date', models.DateField(default=datetime.date.today)),
                ('isbn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.book')),
                ('trans_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.transactioninfo')),
            ],
        ),
        migrations.CreateModel(
            name='StoreInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('isbn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.hardcopy')),
                ('warehouse_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.warehouse')),
            ],
        ),
        migrations.CreateModel(
            name='PublicationInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.author')),
                ('isbn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.book')),
            ],
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword_name', models.CharField(max_length=32)),
                ('isbn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.book')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre_name', models.CharField(max_length=32)),
                ('isbn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.book')),
            ],
        ),
        migrations.CreateModel(
            name='DigitalVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('digital_warehouse', models.CharField(max_length=255)),
                ('isbn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.book', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CreditCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_code', models.IntegerField(unique=True)),
                ('owner_name', models.CharField(max_length=255)),
                ('expired_date', models.DateField()),
                ('branch_name', models.CharField(max_length=255)),
                ('bank', models.CharField(max_length=255)),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.customer')),
            ],
        ),
        migrations.AddConstraint(
            model_name='keyword',
            constraint=models.UniqueConstraint(fields=('isbn', 'keyword_name'), name='isbn-keyword composite key'),
        ),
        migrations.AddConstraint(
            model_name='genre',
            constraint=models.UniqueConstraint(fields=('isbn', 'genre_name'), name='isbn-genre_name composite key'),
        ),
    ]
